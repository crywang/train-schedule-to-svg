wget --no-check-certificate https://kyfw.12306.cn/otn/resources/js/query/train_list.js
wget --no-check-certificate https://kyfw.12306.cn/otn/resources/js/framework/station_name.js

wget -P --no-check-certificate -O /var/ftp/station_name.js https://kyfw.12306.cn/otn/resources/js/framework/station_name.js

7za a -t7z js.7z js/ -xr\!*.gz
7za a -t7z sch.7z sch/
7za a -t7z delay.7z delay/

\cp -p 1.txt 2.txt
vi ~/.bashrc

https://www.12306.cn/index/script/core/common/station_name.js
https://www.12306.cn/index/script/core/common/qss.js

https://kyfw.12306.cn/otn/zzzcx/init
https://kyfw.12306.cn/otn/zzzcx/query?queryDate=2018-12-29&from_station=BJP&to_station=NJH&from_station_name=%E5%8C%97%E4%BA%AC&to_station_name=%E5%8D%97%E4%BA%AC&randCode=&changeStationText=
旧版中转 大于20余票数
r.data.datas

正晚点
https://dynamic.12306.cn/mapping/kfxt/zwdcx/LCZWD/CCCX.jsp
https://www.12306.cn/mapping/kfxt/zwdcx/LCZWD/CCCX.jsp
https://dynamic.12306.cn/mapping/kfxt/zwdcx/LCZWD/cx.jsp?cz=%B3%A4%C9%B3&cc=Z35&cxlx=0&rq=2018-11-02&czEn=-E9-95-BF-E6-B2-99&tp=1541174877075
https://www.12306.cn/mapping/kfxt/zwdcx/LCZWD/cx.jsp?cz=%B3%A4%C9%B3&cc=Z35&cxlx=1&rq=2018-11-03&czEn=-E9-95-BF-E6-B2-99&tp=1541174426436

https://kyfw.12306.cn/otn/zwdch/query?cxlx=1&cz=%E9%95%BF%E6%B2%99&cc=C6971&czEn=-E9-95-BF-E6-B2-99&randCode=
GET POST
{"validateMessagesShowId":"_validatorMessage","status":true,"httpstatus":200,"data":{"message":"G5次列车，到达上海站的时间为11:38","flag":false},"messages":[],"validateMessages":{}}
{"validateMessagesShowId":"_validatorMessage","status":true,"httpstatus":200,"data":{"message":"查询失败！","flag":false},"messages":[],"validateMessages":{}}

车站车次 无Cookie 
https://kyfw.12306.cn/otn/czxx/query?train_start_date=2018-11-03&train_station_name=%E5%8C%97%E4%BA%AC&train_station_code=BJP&randCode=
https://kyfw.12306.cn/otn/czxx/query?train_start_date=2018-03-06&train_station_code=VNP

车次搜索
https://search.12306.cn/search/v1/train/search?keyword=G&date=20181203
https://search.12306.cn/search/v1/train/search?callback=a&keyword=G66&date=20181103&_=1541176682814
车次车站
https://www.12306.cn/index/otn/index12306/queryStopStations?train_no=6c00000G6605&depart_date=2018-11-03
检票口
https://www.12306.cn/index/otn/index12306/queryTicketCheck
Cookie: BIGipServerotn=334496266.64545.0000;

查询同城站起售时
https://www.12306.cn/index/otn/index12306/queryScSname
POST 
Cookie: BIGipServerotn=334496266.64545.0000;
station_telecode=BJP 放URL上也可以

车站地址
http://www.12306.cn/mormhweb/kyyyz/ky_heb/201001/t20100124_1161.html
...
http://www.12306.cn/mormhweb/kyyyz/ky_heb/201001/t20100124_1196.html


https://kyfw.12306.cn/otn/resources/js/query/train_list.js?scriptVersion=1.0
https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9031
https://kyfw.12306.cn/otn/resources/js/framework/favorite_name.js
https://kyfw.12306.cn/otn/resources/js/query/qss.js

http://dynamic.12306.cn/mapping/kfxt/zwdcx/LCZWD/jscss/zmzd.js
http://dynamic.12306.cn/mapping/kfxt/zwdcx/LCZWD/jscss/cczd.js

http://dynamic.12306.cn/mapping/kfxt/zwdcx/LCZWD/jscss/lc_select.js


http://hyfw.95306.cn/hyinfo/page/home-hyzx-yfss
http://dynamic.12306.cn/yjcx/js/CZZD.js
http://dynamic.12306.cn/yjcx/doPickJZM?param=AA&type=0&czlx=0
http://dynamic.12306.cn/yjcx/doPickJZM?param=AA&type=1&czlx=0
http://dynamic.12306.cn/yjcx/doPickJZM?param=AA&type=2&czlx=0
POST

http://hyfw.12306.cn/hyinfo/action/FwcszsAction_index?type=1
http://hyfw.12306.cn/hyinfo/action/FwcszsAction_getljcz
q=&limit=50&timestamp=1545757098789&sheng=%E6%B4%A5&shi=&ljdm=

function hash(str) {
  var c = str.charAt(0);
  var offset={
    "Z":10000,
    "T":20000,
    "K":30000,
    "G":40000,
    "D":50000,
    "C":60000,
    "S":60000,
    "Y":00000,
    "P":00000,
  }
  var num = Number(str.replace(/\D/,'')) % 10000;
  return (offset[c] || 0) + num -1;
}

var d = {}
var st = {}
var m = new Set();
var arr = new Array(200000);
var stat = new Array(2000);
for(date in train_list) {
  for (type in train_list[date]) {
    for (i in train_list[date][type]) {
      t = train_list[date][type][i];
      match = t.station_train_code.match(/(.*)\((.*)-(.*)\)/)
      m.add(match[2]+'-'+match[3])
      d[match[2]+'-'+match[3]] = (d[match[2]+'-'+match[3]] || 0) + 1;
      st[match[2]] = (st[match[2]] || 0) + 1;
      st[match[3]] = (st[match[3]] || 0) + 1;
      arr[hash(match[1])] = t.train_no;
      stat[Math.floor(hash(match[1])/100)] = (stat[hash(match[1])/100] || 0) + 1;
    }
  }
}

//m.size 3651
//arr

//统计不重复的始发-终到
var line_num = [];
for (i in d) {
  line_num.push({
    fromto:i,
    num: d[i]
  })
}

line_num.sort(function(a,b){return b.num - a.num})

str = ""
for (i in line_num) {
  str+=(("    " + Math.ceil(line_num[i].num / 30)).slice(-4) + " " + line_num[i].fromto + "\n")
}
console.log(str)

//统计不重复的始发站
var st_num = [];
for (i in st) {
  st_num.push({
    station:i,
    num: st[i]
  })
}

st_num.sort(function(a,b){return b.num - a.num})

str = ""
for (i in st_num) {
  str+=(("    " + Math.ceil(st_num[i].num / 30)).slice(-4) + " " + st_num[i].station + "\n")
}
console.log(str)

//统计车次分布
var cnt = 0;
var step = 100;
var stat = new Array(Math.ceil(70000/step));
for (i in arr) {
  if (arr[i]) {
    stat[Math.floor(i/step)] = (stat[Math.floor(i/step)] || 0) + 1;
    cnt++;
  }
}
console.log(cnt);

var str = '';
var cnt = 0;
for (var i=0; i<Math.ceil(70000/step);i++) {
  str += ( ('    '+(stat[i]||0)).slice(-3) + ((i+1)%10?'':'\n') + ((i+1)%100?'':'\n'));
  if(stat[i]||0) {
    cnt++;
  }
}

console.log(str);
console.log(cnt);


http://kyfw.12306.cn/otn/czxx/queryByTrainNo?train_no=24000T56850P&from_station_telecode=BJP&to_station_telecode=QTP&depart_date=2018-04-04

票价
https://kyfw.12306.cn/otn/leftTicketPrice/queryAllPublicPrice?leftTicketDTO.train_date=2018-05-01&leftTicketDTO.from_station=HZH&leftTicketDTO.to_station=BJP&purpose_codes=ADULT&randCode=bmxa

https://kyfw.12306.cn/otn/leftTicket/queryTicketPriceFL?train_no=5600000Z1020&from_station_no=01&to_station_no=04&seat_types=1413&train_date=2018-05-01
https://kyfw.12306.cn/otn/leftTicket/queryTicketPrice?train_no=5600000Z1020&from_station_no=01&to_station_no=04&seat_types=1413&train_date=2018-05-01


https://kyfw.12306.cn/otn/leftTicket/queryA?leftTicketDTO.train_date=2018-04-05&leftTicketDTO.from_station=BJP&leftTicketDTO.to_station=SHH&purpose_codes=ADULT

{"validateMessagesShowId":"_validatorMessage","status":true,"httpstatus":200,"messages":["选择的查询日期不在预售日期范围内"],"validateMessages":{}}

{"c_name":"CLeftTicketUrl","c_url":"leftTicket/queryO","status":false}

a.data.result[45].split("|")

1	buttonTextInfo	预订
2	station_train_code
3	train_no
4	start_telecode
5	end_telecode
6	from_telecode
7	to_telecode
8	start_time
9	arrive_time
10	lishi	during
11
12 
13 date

15
16
17

var seatTypeForHB = {
    SWZ: "9_商务座",
    TZ: "P_特等座",
    ZY: "M_一等座",
    ZE: "O_二等座",
    GR: "6_高级软卧",
    RW: "4_软卧",
    SRRB: "F_动卧",
    YW: "3_硬卧",
    RZ: "2_软座",
    YZ: "1_硬座",
    WZ: "1_无座",
    QT: "H_其他"
};


20 gg_num 观光
21 RW19
22 一人软包  T31    K3/K23 包厢硬卧
23 RW/WR
24 RZ     T5685 Y509
25 tz ZT 
26	无座

28		YW
29		YZ
30		ZE
31		ZY
32	swz_num	SW
33		WY
34	seat_feature	席别
35	yp_ex	席别 
36  exchange_train_flag 可以积分兑换
37  houbu_train_flag 候补

  function b4(ct, cv) {
    var cs = [];
    for (var cr = 0; cr < ct.length; cr++) {
      var cw = [];
      var cq = ct[cr].split("|");
      cw.secretHBStr = cq[36];
      cw.secretStr = cq[0];
      cw.buttonTextInfo = cq[1];
      var cu = [];
      cu.train_no = cq[2];
      cu.station_train_code = cq[3];
      cu.start_station_telecode = cq[4];
      cu.end_station_telecode = cq[5];
      cu.from_station_telecode = cq[6];
      cu.to_station_telecode = cq[7];
      cu.start_time = cq[8];
      cu.arrive_time = cq[9];
      cu.lishi = cq[10];
      cu.canWebBuy = cq[11];
      cu.yp_info = cq[12];
      cu.start_train_date = cq[13];
      cu.train_seat_feature = cq[14];
      cu.location_code = cq[15];
      cu.from_station_no = cq[16];
      cu.to_station_no = cq[17];
      cu.is_support_card = cq[18];
      cu.controlled_train_flag = cq[19];
      cu.gg_num = cq[20] ? cq[20] : "--";
      cu.gr_num = cq[21] ? cq[21] : "--";
      cu.qt_num = cq[22] ? cq[22] : "--";
      cu.rw_num = cq[23] ? cq[23] : "--";
      cu.rz_num = cq[24] ? cq[24] : "--";
      cu.tz_num = cq[25] ? cq[25] : "--";
      cu.wz_num = cq[26] ? cq[26] : "--";
      cu.yb_num = cq[27] ? cq[27] : "--";
      cu.yw_num = cq[28] ? cq[28] : "--";
      cu.yz_num = cq[29] ? cq[29] : "--";
      cu.ze_num = cq[30] ? cq[30] : "--";
      cu.zy_num = cq[31] ? cq[31] : "--";
      cu.swz_num = cq[32] ? cq[32] : "--";
      cu.srrb_num = cq[33] ? cq[33] : "--";
      cu.yp_ex = cq[34];
      cu.seat_types = cq[35];
      cu.exchange_train_flag = cq[36];
      cu.from_station_name = cv[cq[6]];
      cu.to_station_name = cv[cq[7]];
      cw.queryLeftNewDTO = cu;
      cs.push(cw)
    }
    return cs
  }


map = r.data.map;

for (i=0;i<r.data.result.length;i++){
result = r.data.result[i].split("|");

/*console.log(
"<tr>\n"
+"<td>"+result[1]+"</td>\n"
+"<td>"+result[2]+"</td>\n"
+"<td>"+result[3]+"</td>\n"
+"<td>"+result[4]+"</td>\n"
+"<td>"+result[5]+"</td>\n"
+"<td>"+map[result[6]]+"</td>\n"
+"<td>"+map[result[7]]+"</td>\n"
+"<td>"+result[8]+"</td>\n"
+"<td>"+result[9]+"</td>\n"
+"<td>"+result[10]+"</td>\n"
+"<td>"+result[11]+"</td>\n"
+"<td>"+result[13]+"</td>\n"
+"<td>"+result[14]+"</td>\n"
+"<td>"+result[15]+"</td>\n"
+"<td>"+result[16]+"</td>\n"
+"<td>"+result[17]+"</td>\n"
+"<td>"+result[18]+"</td>\n"
+"<td>"+result[19]+"</td>\n"
+"<td>"+result[20]+"</td>\n"
+"<td>"+result[21]+"</td>\n"
+"<td>"+result[22]+"</td>\n"
+"<td>"+result[23]+"</td>\n"
+"<td>"+result[24]+"</td>\n"
+"<td>"+result[25]+"</td>\n"
+"<td>"+result[26]+"</td>\n"
+"<td>"+result[27]+"</td>\n"
+"<td>"+result[28]+"</td>\n"
+"<td>"+result[29]+"</td>\n"
+"<td>"+result[30]+"</td>\n"
+"<td>"+result[31]+"</td>\n"
+"<td>"+result[32]+"</td>\n"
+"<td>"+result[33]+"</td>\n"
+"<td>"+result[34]+"</td>\n"
+"<td>"+result[35]+"</td>\n"
+"<td>"+result[0]+"</td>\n"
+"<td>"+result[12]+"</td>\n"
+"</tr>\n"
);*/

console.log(
//result[1] + "\t|" + 
result[2] + "|" + 
(result[18]>0?result[18]:" ") + "|" + 
result[4] + "|" + 
result[5] + "|" + 
result[16] + "|" + 
result[6] + "|" + 
result[17] + "|" + 
result[7] + "|" + 
result[8] + "|" + 
result[9] + "|" + 
result[10] + "|" + 

result[11] + "|" + 
result[13] + "|" + 
result[14] + "|" + 
result[15] + "|" + 
result[19] + "|" + 
result[20] + "\t|" + 
result[21] + "\t|" + 
result[22] + "\t|" + 
result[23] + "\t|" + 
result[24] + "\t|" + 
result[25] + "\t|" + 
result[26] + "\t|" + 
result[27] + "\t|" + 
result[28] + "\t|" + 
result[29] + "\t|" + 
result[30] + "\t|" + 
result[31] + "\t|" + 
result[32] + "\t|" + 
result[33] + "\t|" + 
result[3] + "\t|" + 
result[34] + "\t|" + 
result[35]// + "\t|" + 
//result[0] + "\t|" + 
//result[12] + "\t|" + 
//result[36]
);
}



import json
f = open('train_list.js','r',encoding= 'utf8')
f = open('train_list.js','r')
f.read(16)
data = f.read()
t = json.loads(data)
t['2017-12-09']['Z'][0]
print(t['2017-12-09']['Z'][0]['station_train_code'])
t['2017-12-09']['Z'][0]['train_no']

for i in range(len(t['2017-12-09']['Z'])):
    print(t['2017-12-09']['Z'][i])

z = t['2017-12-09']['Z']
z = sorted(z,key=lambda x:x['train_no'])
for i in range(len(z)):
    print(z[i]['station_train_code'])


###

for i in range(0,len(t[date]['G'])):
    r = processA(t[date]['G'][i]);
    if len(r) == 0:
        print("error " + i);
        break;
    time.sleep(2+random.random()*2) #time in s

processA(t[date]['G'][2]);
processA(t[date]['O'][468]);
processA(t[date]['O'][469]);

#查找位置
for date in sorted(t.keys()):
    for type in t[date]:
        for i in range(0,len(t[date][type])):
            if ('D927' == re.findall(r'(.*)\((.*)-(.*)\)', t[date][type][i]['station_train_code'] , re.I|re.M)[0][0] ):
                print("t[\'" + date + "\'][\'" + type.encode('utf-8') + "\'][" + str(i) + "]")

#telecode('九龙');
#k = t.keys();
#k.sort() 
#print(t[date]['G'][0]['station_train_code']);
#t[date]['Z'][0]['train_no'];
#a = t[date]['Z'][0] #test


'''
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
  File "<stdin>", line 6, in processA
  File "/usr/lib64/python2.7/json/__init__.py", line 338, in loads
    return _default_decoder.decode(s)
  File "/usr/lib64/python2.7/json/decoder.py", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib64/python2.7/json/decoder.py", line 384, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
'''

'''
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
  File "<stdin>", line 5, in processA
  File "/usr/lib/python2.7/site-packages/requests/api.py", line 72, in get
    return request('get', url, params=params, **kwargs)
  File "/usr/lib/python2.7/site-packages/requests/api.py", line 58, in request
    return session.request(method=method, url=url, **kwargs)
  File "/usr/lib/python2.7/site-packages/requests/sessions.py", line 508, in request
    resp = self.send(prep, **send_kwargs)
  File "/usr/lib/python2.7/site-packages/requests/sessions.py", line 618, in send
    r = adapter.send(request, **kwargs)
  File "/usr/lib/python2.7/site-packages/requests/adapters.py", line 490, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', error(104, 'Connection reset by peer'))
'''

'2018-04-11'
88000075830A
马海
马海 telecode not found!
